// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ProjectVec
NumericVector ProjectVec(NumericVector xi, NumericVector xj, double dij);
RcppExport SEXP cmdsr_ProjectVec(SEXP xiSEXP, SEXP xjSEXP, SEXP dijSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type xj(xjSEXP );
        Rcpp::traits::input_parameter< double >::type dij(dijSEXP );
        NumericVector __result = ProjectVec(xi, xj, dij);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ProjectC
NumericMatrix ProjectC(NumericMatrix Dtau, NumericMatrix Xtau, int i);
RcppExport SEXP cmdsr_ProjectC(SEXP DtauSEXP, SEXP XtauSEXP, SEXP iSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type Dtau(DtauSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Xtau(XtauSEXP );
        Rcpp::traits::input_parameter< int >::type i(iSEXP );
        NumericMatrix __result = ProjectC(Dtau, Xtau, i);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// MajoriseC
List MajoriseC(List Dlist, List Xlist, int i, List params);
RcppExport SEXP cmdsr_MajoriseC(SEXP DlistSEXP, SEXP XlistSEXP, SEXP iSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type Dlist(DlistSEXP );
        Rcpp::traits::input_parameter< List >::type Xlist(XlistSEXP );
        Rcpp::traits::input_parameter< int >::type i(iSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        List __result = MajoriseC(Dlist, Xlist, i, params);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// MinimiseC
NumericMatrix MinimiseC(List XauxList, int i, List params);
RcppExport SEXP cmdsr_MinimiseC(SEXP XauxListSEXP, SEXP iSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type XauxList(XauxListSEXP );
        Rcpp::traits::input_parameter< int >::type i(iSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        NumericMatrix __result = MinimiseC(XauxList, i, params);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// CenterConfiguration
void CenterConfiguration(List XList, List params);
RcppExport SEXP cmdsr_CenterConfiguration(SEXP XListSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type XList(XListSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        CenterConfiguration(XList, params);
    }
    return R_NilValue;
END_RCPP
}
// MinimiseWeighted
NumericMatrix MinimiseWeighted(List XauxList, List WList, int i, List params);
RcppExport SEXP cmdsr_MinimiseWeighted(SEXP XauxListSEXP, SEXP WListSEXP, SEXP iSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type XauxList(XauxListSEXP );
        Rcpp::traits::input_parameter< List >::type WList(WListSEXP );
        Rcpp::traits::input_parameter< int >::type i(iSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        NumericMatrix __result = MinimiseWeighted(XauxList, WList, i, params);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// OptimiseCurve
int OptimiseCurve(List Dlist, List Xlist, int i, List params);
RcppExport SEXP cmdsr_OptimiseCurve(SEXP DlistSEXP, SEXP XlistSEXP, SEXP iSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type Dlist(DlistSEXP );
        Rcpp::traits::input_parameter< List >::type Xlist(XlistSEXP );
        Rcpp::traits::input_parameter< int >::type i(iSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        int __result = OptimiseCurve(Dlist, Xlist, i, params);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// OptimiseAllCurves
void OptimiseAllCurves(List Dlist, List Xlist, List params);
RcppExport SEXP cmdsr_OptimiseAllCurves(SEXP DlistSEXP, SEXP XlistSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type Dlist(DlistSEXP );
        Rcpp::traits::input_parameter< List >::type Xlist(XlistSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        OptimiseAllCurves(Dlist, Xlist, params);
    }
    return R_NilValue;
END_RCPP
}
// OuterLoop
int OuterLoop(List Dlist, List Xlist, List params, int maxIter);
RcppExport SEXP cmdsr_OuterLoop(SEXP DlistSEXP, SEXP XlistSEXP, SEXP paramsSEXP, SEXP maxIterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type Dlist(DlistSEXP );
        Rcpp::traits::input_parameter< List >::type Xlist(XlistSEXP );
        Rcpp::traits::input_parameter< List >::type params(paramsSEXP );
        Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP );
        int __result = OuterLoop(Dlist, Xlist, params, maxIter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
